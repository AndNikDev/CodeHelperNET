371

C#H
CHEAT SHEET

CLAUDIO BERNASCONI



HEEELLLOOOOO!

I'm Andrei Neagoie, Founder and Lead Instructor of the Zero To Mastery Academy.

After working as a Senior Software Developer over the years, | now dedicate 100% of my time to
teaching others in-demand skills, help them break into the tech industry, and advance their

careers.

In only a few years, over 1,000,000 students around the world have taken Zero To Mastery courses

and many of them are now working at top tier companies like Apple, Google, Amazon, Tesla, IBM,

Facebook, and Shopify, just to name a few.

This cheat sheet, created by our C#/.NET instructor (Claudio Bernasconi) provides you with the

key C# syntax and concepts you need to know.

If you want to not only learn C# but also get the exact steps to build your own projects and get

hired as a Developer, then check out our Career Paths.

Happy Learning!
Andrei

Founder & Lead Instructor, Zero To Mastery

Andrei Neagoie



C# Cheat Sheet

1. Basic Structure

Every C# program uses this foundational structure. This forms the skeleton of your
application. The Program.cs file is the foundation of most C# project types.

using System; // 'using' allows for easier access to types in a namespace.

namespace YourNamespace // Namespaces organize code and prevent naming collisions.

{

class YourClass // A 'class' defines the blueprint of objects.

‘ static void Main(string[] args) // 'Main' is where the program starts execution.
{
Console.WriteLine("Hello, World!"); // Displays text in the console.
}
}

Starting with .NET 5, top-level statements make it possible to simplify the content of the
Program.cs file by only having the code within the static void Main method definition:

Console.WriteLine("Hello, World");

2. Data Types

Every variable and constant in C# has a type, determining the values it can hold and
operations that can be performed on it.

e Value Types: Directly store the data. Once you assign a value, it holds that data.
© int, char, float are just a few examples.
e Reference Types: Store a memory address. They point to the address of the value.

© string, class, array are commonly used.

3. Variables

Variables are symbolic names for values. They play a central role in programming.

C# Cheat Sheet S Z T M
